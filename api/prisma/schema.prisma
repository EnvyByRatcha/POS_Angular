// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id() @default(autoincrement())
  name     String
  username String
  password String
  level    String
  status   String     @default("use")
  BillSale BillSale[]
}

model FoodType {
  id       Int        @id @default(autoincrement())
  name     String
  remark   String?
  status   String     @default("use")
  FoodSize FoodSize[]
  Taste    Taste[]
  Food     Food[]
}

model FoodSize {
  id         Int      @id @default(autoincrement())
  name       String
  remark     String?
  addMoney   Int      @default(0)
  status     String   @default("use")
  foodTypeId Int
  FoodType   FoodType @relation(fields: [foodTypeId], references: [id])
}

model Taste {
  id             Int              @id @default(autoincrement())
  name           String
  remark         String?
  status         String           @default("use")
  foodTypeId     Int
  FoodType       FoodType         @relation(fields: [foodTypeId], references: [id])
  SaleTempDetail SaleTempDetail[]
}

model Food {
  id             Int              @id @default(autoincrement())
  name           String
  foodType       String           @default("food")
  price          Int
  remark         String?
  img            String
  status         String           @default("use")
  foodTypeId     Int
  FoodType       FoodType         @relation(fields: [foodTypeId], references: [id])
  SaleTemp       SaleTemp[]
  SaleTempDetail SaleTempDetail[]
  BillSaleDetail BillSaleDetail[]
}

model SaleTemp {
  id             Int              @id @default(autoincrement())
  foodId         Int
  qty            Int
  price          Int
  tableNo        Int
  userId         Int
  Food           Food             @relation(fields: [foodId], references: [id])
  addMoney       Int?
  tasteId        Int?
  SaleTempDetail SaleTempDetail[]
}

model SaleTempDetail {
  id         Int      @id @default(autoincrement())
  saleTempId Int
  qty        Int      @default(1)
  addMoney   Int?
  size       String?
  tasteId    Int?
  foodId     Int
  Food       Food     @relation(fields: [foodId], references: [id])
  SaleTemp   SaleTemp @relation(fields: [saleTempId], references: [id])
  Taste      Taste?   @relation(fields: [tasteId], references: [id])
}

model BillSale {
  id             Int              @id @default(autoincrement())
  createdDate    DateTime         @default(now())
  payDate        DateTime         @default(now())
  amount         Int
  payType        String
  userId         Int
  inputMoney     Int
  returnMoney    Int
  tableNo        Int
  status         String           @default("use")
  User           User             @relation(fields: [userId], references: [id])
  BillSaleDetail BillSaleDetail[]
}

model BillSaleDetail {
  id         Int      @id @default(autoincrement())
  billSaleId Int
  foodId     Int
  foodSizeId Int?
  tasteId    Int?
  addMoney   Int?
  price      Int?
  BillSale   BillSale @relation(fields: [billSaleId], references: [id])
  Food       Food     @relation(fields: [foodId], references: [id])
}

model Organization {
  id        Int     @id @default(autoincrement())
  name      String
  address   String
  phone     String?
  email     String?
  website   String?
  promptPay String?
  logo      String?
  taxCode   String
}
